!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button-submit",inactiveButtonClass:"modal__button-submit_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=(e,t,r)=>{const o=t.id+"-error";document.querySelector("#"+o).textContent="",t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):(t.disabled=!1,t.classList.remove(r.inactiveButtonClass))},o=(e,t)=>{e.disabled=!0,e.classList.add(t.inactiveButtonClass)},n=n=>{const a=Array.from(n.querySelectorAll(e.inputSelector)),s=n.querySelector(e.submitButtonSelector);r(a,s,e),n.addEventListener("reset",(()=>{o(s,e)})),a.forEach((o=>{o.addEventListener("input",(function(){((e,r,o)=>{r.validity.valid?t(0,r,o):((e,t,r,o)=>{const n=t.id+"-error";document.querySelector("#"+n).textContent=r,t.classList.add(o.inputErrorClass)})(0,r,r.validationMessage,o)})(0,o,e),r(a,s,e)}))}))};function a(e,t,r,o){e.textContent=t?o:r}const s=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}editAvatarInfo(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}addCardInfo(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}changeLikeStatus(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then((e=>{if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"7ce32752-7f51-4ee3-8daa-e08858792089","Content-Type":"application/json"}});s.getAppInfo().then((e=>{let[t,r]=e;t.forEach((e=>{const t=B(e);E.append(t)})),u.textContent=r.name,m.textContent=r.about})).catch(console.error);const i=document.querySelectorAll(".modal"),l=document.querySelector(".profile__edit-button"),c=document.querySelector("#profile-edit-modal"),d=c.querySelector(".modal__form"),u=(c.querySelector(".modal__button-close"),document.querySelector(".profile__name")),m=document.querySelector(".profile__description"),_=c.querySelector("#profile-name-input"),h=c.querySelector("#profile-description-input"),f=document.querySelector("#add-card-modal"),y=document.querySelector(".profile__new-post-button"),S=f.querySelector(".modal__form"),v=(f.querySelector(".modal__button-close"),f.querySelector(".modal__button-submit")),b=S.querySelector("#add-card-link-input"),p=S.querySelector("#add-card-caption-input"),q=document.querySelector("#card-template"),E=document.querySelector(".cards__list"),C=document.querySelector("#preview-modal"),k=C.querySelector(".modal__image"),L=C.querySelector(".modal__caption"),g=document.querySelector("#avatar-modal"),x=document.querySelector(".profile__avatar-button"),$=g.querySelector(".modal__form"),j=(g.querySelector(".modal__button-submit"),$.querySelector("#avatar-input")),U=document.querySelector("#delete-modal"),I=U.querySelector(".modal__form");let P,A;function D(e){e.classList.add("modal_open"),document.addEventListener("keydown",w)}function T(e){e.classList.remove("modal_open"),document.removeEventListener("keydown",w)}function w(e){if("Escape"===e.key){const e=document.querySelector(".modal_open");e&&T(e)}}function B(e){const t=q.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return r.textContent=e.name,o.src=e.link,o.alt=e.name,e.isLiked&&n.classList.add("card__like-button_liked"),n.addEventListener("click",(t=>{const r=t.target.classList.contains("card__like-button_liked");s.changeLikeStatus(e._id,r).then((e=>{n.classList.toggle("card__like-button_liked")})).catch(console.error)})),a.addEventListener("click",(()=>{P=t,A=e._id,D(U)})),o.addEventListener("click",(()=>{D(C),k.src=e.link,k.alt=e.name,L.textContent=e.name})),t}x.addEventListener("click",(()=>{D(g)})),$.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a(t,!0,t.textContent,"Saving..."),s.editAvatarInfo(j.value).then((e=>{j.textContent=e.avatar,T(g)})).catch(console.error).finally((()=>{a(t,!1,t.textContent,"Saving...")}))})),document.querySelectorAll(".modal__button-close"),i.forEach((e=>{e.addEventListener("mousedown",(t=>{t.target.classList.contains("modal_open")&&T(e),t.target.classList.contains("modal__button-close")&&T(e),t.target.classList.contains("modal__button-submit_cancel")&&T(e)}))})),l.addEventListener("click",(()=>{_.value=u.textContent,h.value=m.textContent,((e,r,o)=>{r.forEach((e=>{t(0,e,o)}))})(0,[_,h],e),D(c)})),d.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a(t,!0,t.textContent,"Saving..."),s.editUserInfo({name:_.value,about:h.value}).then((e=>{u.textContent=e.name,m.textContent=e.about,T(c)})).catch(console.error).finally((()=>{a(t,!1,t.textContent,"Saving...")}))})),I.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a(t,!0,t.textContent,"Deleting..."),s.deleteCard(A).then((e=>{T(U),P.remove()})).catch(console.error).finally((()=>{a(t,!1,t.textContent,"Deleting...")}))})),y.addEventListener("click",(()=>{D(f)})),S.addEventListener("submit",(function(t){t.preventDefault();const r=t.submitter;a(r,!0,r.textContent,"Saving..."),s.addCardInfo({name:p.value,link:b.value}).then((t=>{const r=B(t);E.prepend(r),T(f),S.reset(),disableButton(v,e)})).catch(console.error).finally((()=>{a(r,!1,r.textContent,"Saving...")}))})),function(e){document.querySelectorAll(e.formSelector).forEach((e=>{n(e)}))}(e)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,